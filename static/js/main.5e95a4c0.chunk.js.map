{"version":3,"sources":["components/CreatePost.js","components/Post.js","components/EditPost.js","components/AllPosts.js","App.js","reducers/postReducer.js","index.js"],"names":["CreatePost","handleSubmit","e","preventDefault","title","_this","getTitle","value","body","getBody","data","id","Date","editing","props","dispatch","type","_this2","this","react_default","a","createElement","className","onSubmit","required","ref","input","placeholder","rows","cols","Component","connect","Post","post","onClick","EditPost","handleEdit","newTitle","newBody","AllPosts","posts","map","key","components_EditPost","components_Post","console","log","state","App","components_CreatePost","components_AllPosts","postReducer","arguments","length","undefined","action","concat","filter","Object","objectSpread","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5e95a4c0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass CreatePost extends Component {\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const title = this.getTitle.value;\n        const body = this.getBody.value;\n\n        const data = {\n            id: new Date(),\n            title,\n            body,\n            editing: false\n        }\n\n        this.props.dispatch({\n            type: 'ADD_POST', data\n        });\n        \n        this.getTitle.value = '';\n        this.getBody.value = '';\n    }\n\n\n    render() {\n        return (\n            <div className=\"create-post\">\n                <h1>Create Post</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <input \n                        required\n                        type=\"text\"\n                        ref={(input) => this.getTitle = input}\n                        placeholder=\"Enter Post Title\"\n                    /><br /><br />\n                    <textarea \n                        required\n                        ref={(input) => this.getBody = input}\n                        rows=\"5\"\n                        cols=\"20\"\n                        placeholder=\"Enter Post\"\n                    /><br /><br />\n                    <button>Post</button>\n                </form>\n            </div>\n        );\n    }\n\n}\n\nexport default connect()(CreatePost);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\nclass Post extends Component {\n    \n    render (){\n        return (\n            <div className='post'>\n                <h2>{this.props.post.title}</h2>\n                <p>{this.props.post.body}</p>\n                <button onClick={()=>this.props.dispatch({type: 'EDIT_POST', id: this.props.post.id})}>Edit</button>\n                <button onClick={()=>this.props.dispatch({type: 'DELETE_POST', id: this.props.post.id})}>Delete</button>\n            </div>\n        )\n    }\n\n}\n\nexport default connect()(Post);","import React, { Component} from 'react';\nimport { connect } from 'react-redux';\n\nclass EditPost extends Component {\n\n    handleEdit = (e) => {\n        e.preventDefault();\n\n        const newTitle = this.getTitle.value;\n        const newBody = this.getBody.value;\n\n        const data = {\n            newTitle,\n            newBody\n        }\n\n        this.props.dispatch({type: 'UPDATE', id: this.props.post.id, data: data});\n    }\n\n    render(){\n        return (\n            <div className=\"edit-post\">\n                <form onSubmit={this.handleEdit}>\n                    <input \n                        required\n                        type=\"text\"\n                        ref={(input) => this.getTitle = input}\n                        placeholder=\"Enter Post Title\"\n                    /><br /><br />\n                    <textarea \n                        required\n                        ref={(input) => this.getBody = input}\n                        rows=\"5\"\n                        cols=\"20\"\n                        placeholder=\"Enter Post\"\n                    /><br /><br />\n                    <button>Update</button>\n                </form>\n            </div>\n        );\n    }\n\n}\n\n\nexport default connect()(EditPost);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Post from './Post';\nimport EditPost from './EditPost';\n\nclass AllPosts extends Component {\n\n    render() {\n        return (\n            <div className=\"all-posts\">\n                {this.props.posts.map((post) => (\n                    <div key={post.id}>\n                        {post.editing ? <EditPost post={post} key={post.id} /> : <Post key={post.id} post={post} />}\n                    </div>  \n                ))}\n                \n                {console.log(this.props.posts)}\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state\n    }\n}\n\nexport default connect(mapStateToProps)(AllPosts);","import React, { Component } from 'react';\nimport './App.css';\nimport CreatePost from './components/CreatePost';\nimport AllPosts from './components/AllPosts';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <CreatePost />\n        <AllPosts />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","\nconst postReducer = (state = [], action) => {\n    switch(action.type){\n        case 'ADD_POST':\n            return state.concat([action.data]);\n        case 'DELETE_POST':\n            return state.filter(post => post.id !== action.id);\n        case 'EDIT_POST':\n            return state.map(post => post.id === action.id ? {...post, editing: !post.editing} : post);\n        case 'UPDATE':\n            return state.map((post) => {\n                if (post.id === action.id){\n                    return {\n                        ...post,\n                        title: action.data.newTitle,\n                        body: action.data.newBody,\n                        editing: !post.editing\n                    }\n                } else {\n                    return post;\n                }\n            });    \n        default:\n            return state;\n    }\n}\n\nexport default postReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport postReducer from './reducers/postReducer';\n\nconst store = createStore(postReducer);\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}